name: Release Artifacts

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  github-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          binary_name="${{ github.event.repository.name }}"
          if [ "${{ matrix.os }}" = "windows" ]; then
            binary_name="${binary_name}.exe"
          fi
          go build -v -ldflags="-w -s" -o "dist/${binary_name}_${{ matrix.os }}_${{ matrix.arch }}_${{ env.VERSION }}"

      - name: Create Release
        if: matrix.os == 'linux' && matrix.arch == 'amd64'
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
